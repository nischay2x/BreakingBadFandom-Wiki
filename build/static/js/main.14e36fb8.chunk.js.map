{"version":3,"sources":["reducers/characterReducer.js","reducers/currentCharacter.js","reducers/quotesReducer.js","reducers/index.js","api/breakingBad.js","actions/characters.js","components/Header.jsx","components/SearchBar.jsx","components/ListPage.jsx","components/Home.jsx","components/CharacterProfile.jsx","App.jsx","actions/quotes.js","index.js"],"names":["characterReducer","characters","action","type","payload","regex","RegExp","res","filter","character","name","match","rex","every","item","category","includes","currentCharacter","quotesReducer","quotes","quote","ReducerList","combineReducers","getCharactersByName","axios","get","localList","getAllCharacters","dispatch","a","length","data","console","log","Header","useDispatch","className","src","alt","width","to","onClick","title","SearchBar","props","useState","characterName","setCharacterName","categories","setCategories","handleCategoryFilter","e","target","checked","value","id","onSubmit","preventDefault","placeholder","onChange","data-toggle","data-target","aria-expanded","aria-controls","ListPage","classList","map","idx","style","color","status","occupation","join","birthday","Home","useSelector","state","broken","array","brPoint","start","push","slice","breaker","activePage","setActivePage","handleActivePageToggle","prev","now","dataset","toggle","document","getElementById","remove","replace","add","chars","breaks","CharacterProfile","who","useParams","useEffect","info","api","charQuotes","author","img","nickname","portrayed","appearance","App","exact","path","component","store","createStore","applyMiddleware","thunk","ReactDom","render"],"mappings":"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","file":"static/js/main.14e36fb8.chunk.js","sourcesContent":["const characterReducer = (characters = [], action) => {\r\n    switch(action.type){\r\n        case 'ALL_CHARACTERS' : return action.payload;\r\n        case 'SEARCHED_CHARACTER' : \r\n            var regex = new RegExp(`${action.payload}`, `i`);\r\n            var res = characters.filter(character => character.name.match(regex)); \r\n            return [...res];\r\n        case 'CATEGORY_CHARACTER' : let rex = characters.filter(character => {\r\n            return action.payload.every(item => character.category.includes(item))\r\n        }); return [...rex];\r\n        default : return characters;\r\n    }\r\n}\r\n\r\nexport default characterReducer;","const currentCharacter = (characters = [], action) => {\r\n    switch(action.type){\r\n        case 'CURRENT_CHARACTER' : return action.payload;\r\n        case 'CHARACTER_PROFILE' : return characters.filter(character => character.name === action.payload);\r\n        default : return characters;\r\n    }\r\n}\r\n\r\nexport default currentCharacter;","const quotesReducer = (quotes = [], action) => {\r\n    switch(action.type){\r\n        case 'ALL_QUOTES' : return action.payload;\r\n        case 'SEARCHED_QUOTE' : \r\n            var regex = new RegExp(`${action.payload}`, `i`);\r\n            var res = quotes.filter(quote => quote.quote.match(regex)); \r\n            return [...res];\r\n        default : return quotes;\r\n    }\r\n}\r\n\r\nexport default quotesReducer;","import { combineReducers } from \"redux\";\r\nimport characterReducer from \"./characterReducer\";\r\nimport currentCharacter from \"./currentCharacter\";\r\nimport quotesReducer from \"./quotesReducer\";\r\n\r\nconst ReducerList = combineReducers({\r\n    characterReducer, currentCharacter, quotesReducer\r\n});\r\n\r\nexport default ReducerList;","import axios from 'axios';\r\n\r\nexport const getAllCharacters = () => axios.get('https://breakingbadapi.com/api/characters')\r\nexport const getCharactersByName = (name) => axios.get(`https://breakingbadapi.com/api/characters?name=${name}`)\r\nexport const getCharactersByCategory = (category) => axios.get(`https://breakingbadapi.com/api/characters?category=${category}`)\r\nexport const getCharacterQuotes = () => axios.get(`https://breakingbadapi.com/api/quotes`)\r\n\r\n","import * as api from '../api/breakingBad'\r\n\r\nvar localList = [];\r\n\r\nexport const getAllCharacters = () => async(dispatch) => {\r\n    if(localList.length){\r\n        dispatch({type: 'ALL_CHARACTERS', payload : localList})\r\n    } else {\r\n        try {\r\n            const {data} = await api.getAllCharacters();\r\n            localList = data;\r\n            dispatch({type : 'ALL_CHARACTERS', payload : data})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCharactersByName = (name) => async(dispatch) => {\r\n    dispatch({type : 'SEARCHED_CHARACTER', payload : name})\r\n}\r\n\r\nexport const getCharacterProfile = (name) => async(dispatch) => {\r\n    if(localList.length){\r\n        const info = localList.filter(chars => chars.name === name)\r\n        dispatch({type : 'CURRENT_CHARACTER', payload : info})\r\n    } else {\r\n        try {\r\n            const {data} = await api.getCharactersByName(name);\r\n            dispatch({type : 'CURRENT_CHARACTER', payload : data})\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCharactersByCategory = (category) => async(dispatch) => {\r\n    dispatch({type: 'CATEGORY_CHARACTER', payload : category})\r\n}\r\n\r\n// export const getCharacter = (who) => async(dispatch) => {\r\n//     let select = null;\r\n//     let regex = new RegExp(who, 'i')\r\n//     if(localList.length){\r\n//         select = localList.find(chars => chars.name.match(regex))\r\n//         console.log(select);\r\n//         dispatch({type : 'CURRENT_CHARACTER', payload : select})\r\n//     } else {\r\n//         await getAllCharacters()\r\n//         select = localList.find(chars => chars.name.match(regex))\r\n//         console.log(select);\r\n//         dispatch({type : 'CURRENT_CHARACTER', payload : select})\r\n//     }\r\n// }","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getAllCharacters } from '../actions/characters';\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleReload = () => {\r\n        dispatch(getAllCharacters())\r\n    }\r\n\r\n    return(\r\n        <header>\r\n            <div className=\"p-2 px-4\">\r\n            <img src=\"./media/Logo_Breaking_Bad.png\" alt=\"Logo\" width='100'/>\r\n            <Link to='/' onClick={handleReload} title='Home'><i className=\"fas fa-home fa-2x text-dark\"></i></Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllCharacters, getCharactersByCategory, getCharactersByName } from '../actions/characters';\r\n\r\nconst SearchBar = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [characterName, setCharacterName] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    const handleChange = (e) => {\r\n        setCharacterName(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (characterName) dispatch(getCharactersByName(characterName))\r\n        else dispatch(getAllCharacters())\r\n    }\r\n\r\n    const handleCategoryFilter = (e) => {\r\n        if(e.target.checked){\r\n            if(!categories.includes(e.target.value)){\r\n                setCategories([...categories, e.target.value])\r\n            } \r\n        } else {\r\n            setCategories(categories.filter(item => item !== e.target.value))\r\n        }\r\n    }\r\n\r\n    const handleFilterSave = (e) => {\r\n        e.preventDefault();\r\n        if(categories.length) dispatch(getCharactersByCategory(categories))\r\n        else dispatch(getAllCharacters())\r\n    }\r\n\r\n\r\n    return (\r\n        <div id='search-bar'>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"container\">\r\n                    <div className='col-11 col-md-6 d-flex'>\r\n                        <input type=\"text\" className=\"form-control\" placeholder='Search any Character' value={characterName} onChange={handleChange} />\r\n                        <button type='submit' className='btn btn-dark'><i className='fa fa-search'></i></button>\r\n                    </div>\r\n                    <button className=\"btn btn-warning\" type=\"button\" data-toggle=\"collapse\" data-target=\"#filter\" aria-expanded=\"false\" aria-controls=\"filter\">\r\n                        <i className=\"fas fa-sliders-h\"></i>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <div className=\"container mt-3\">\r\n                <div className=\"collapse col-12 col-md-5\" id=\"filter\">\r\n                    <div className=\"card-header\">\r\n                        <h6>Category Filter</h6>\r\n                        <button className=\"btn btn-warning btn-sm\" type=\"button\" \r\n                        data-toggle=\"collapse\" data-target=\"#filter\" aria-expanded=\"true\" aria-controls=\"filter\"\r\n                        onClick={handleFilterSave}>Apply</button>\r\n                    </div>\r\n                    <div className=\"card-body mb-2\">\r\n                        <span>\r\n                            <input type=\"checkbox\" onChange={handleCategoryFilter} value='Breaking Bad' /> Breaking Bad\r\n                        </span>\r\n                        <span>\r\n                            <input type=\"checkbox\" onChange={handleCategoryFilter} value='Better Call Saul' /> Better Call Saul\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ListPage = (props) => {\r\n\r\n    const {characters, id} = props;\r\n    const classList = (id === 'list-page-0') ? 'container list-page active' : 'container list-page';\r\n\r\n    return (\r\n        <div className={classList} id={id}>\r\n            {characters.map((item, idx) => {\r\n                return (\r\n                    <div className=\"card border character-cards\" key={idx}>\r\n                        <div className=\"card-header\">\r\n                            <Link to={`/${item.name}`} style={{ color: 'green' }}>\r\n                                <h4>{item.name}</h4><i className=\"fas fa-link fa-lg\"></i>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <span>Status : {item.status}</span>\r\n                            <span>Occupation : {item.occupation.join(', ')}</span>\r\n                            <span>Date of Birth : {item.birthday}</span>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListPage;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport { useSelector } from 'react-redux';\r\nimport ListPage from './ListPage';\r\nimport { useState } from 'react';\r\n\r\nconst Home = () => {\r\n\r\n    const characters = useSelector(state => state.characterReducer)\r\n    const broken = breaker(characters, 10)\r\n\r\n    const [activePage, setActivePage] = useState(0)\r\n\r\n    const handleActivePageToggle = (e) => {\r\n        displayActivePage(activePage, e.target.dataset.toggle);\r\n        setActivePage(e.target.dataset.toggle)\r\n    }\r\n\r\n    return( \r\n        <main>\r\n            <SearchBar chars={characters}/>\r\n            {broken.map((breaks, idx) => <ListPage key={idx} characters={breaks} id={`list-page-${idx}`}/>)}\r\n            <div id='pagination'>\r\n                {broken.map((item, idx) => \r\n                    <button key={idx} \r\n                    className='btn btn-outline-primary' \r\n                    onClick={(e) => handleActivePageToggle(e)} \r\n                    id={`pagin-btn-${idx}`}\r\n                    data-toggle={idx}>\r\n                        {idx+1}\r\n                    </button>)}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\nfunction breaker (array, brPoint){\r\n    let start = 0;\r\n    let broken = []\r\n    if(array.length > brPoint){\r\n        while(start < array.length){\r\n            broken.push(array.slice(start, start+brPoint))\r\n            start+=brPoint;\r\n        }\r\n        return broken;\r\n    } else {\r\n        return [array];\r\n    }\r\n}\r\n\r\nfunction displayActivePage (prev, now) {\r\n    document.getElementById(`list-page-${prev}`).classList.remove('active')\r\n    document.getElementById(`pagin-btn-${prev}`).classList.replace('btn-primary', 'btn-outline-primary')\r\n    document.getElementById(`list-page-${now}`).classList.add('active')\r\n    document.getElementById(`pagin-btn-${now}`).classList.replace('btn-outline-primary', 'btn-primary')\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getCharacterProfile } from '../actions/characters';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CharacterProfile = () => {\r\n\r\n    const { who } = useParams()\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCharacterProfile(who))\r\n    }, [dispatch, who])\r\n\r\n\r\n    const data = useSelector(state => state.currentCharacter)\r\n    const quotes = useSelector(state => state.quotesReducer)\r\n    const charQuotes = quotes.filter(quote => quote.author === who);\r\n\r\n    if(data.length){\r\n        let info = data[0];\r\n        return (\r\n            <main>\r\n                <div className=\"my-2\" id='character'>\r\n                    <div className=\"col-12 col-md-5 col-lg-3\" id='char-img'>\r\n                        <img src={info.img} alt={info.name} width='100%' />\r\n                    </div>\r\n                    <div className='col-md-6' id='char-profile'>\r\n                        <div className=\"card-header\">\r\n                            <h4>{info.name}</h4>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <p>Date of Birth : {info.birthday}</p>\r\n                            <p>Occupation : {info.occupation.join(', ')}</p>\r\n                            <p>Status : {info.status}</p>\r\n                            <p>Nickname : {info.nickname}</p>\r\n                            <p>Portyrayed By : {info.portrayed}</p>\r\n                            <p>Appearance (Season) : {info.appearance.join(', ')}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='container card' id='char-quote'>\r\n                    {(charQuotes.length) ? <div className='card-header text-center'>\r\n                        <h5>Quotes by {info.name}</h5>\r\n                    </div> : <p></p>}\r\n                    {\r\n                        charQuotes\r\n                            .map((quote, idx) => <div key={idx} className='card-body'>\r\n                                <i className=\"fas fa-quote-left\">\r\n                                </i> <p className='quote-text'><i>{quote.quote}</i></p>\r\n                            </div>)\r\n                    }\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <main>\r\n                <h1>Loading</h1>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterProfile;","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\nimport CharacterProfile from './components/CharacterProfile';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getAllCharacters } from './actions/characters';\r\nimport { getAllQuotes } from './actions/quotes';\r\n\r\nconst App = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getAllCharacters())\r\n        dispatch(getAllQuotes())\r\n    }, [dispatch])\r\n\r\n    return(\r\n        <>\r\n            <BrowserRouter>\r\n            <Header/>\r\n            <Route exact path='/' component={Home}></Route>\r\n            <Route path='/:who'>\r\n                <CharacterProfile/>\r\n            </Route>\r\n            </BrowserRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import * as api from \"../api/breakingBad\";\r\n\r\nexport const getAllQuotes = () => async(dispatch) => {\r\n    try {\r\n        const {data} = await api.getCharacterQuotes()\r\n        dispatch({type : 'ALL_QUOTES', payload : data})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","//import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport ReducerList from './reducers/index';\r\n\r\nimport App from './App';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(ReducerList, applyMiddleware(thunk));\r\n\r\nReactDom.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    , document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}